
@model TheatreCMS3.Areas.Rent.Models.Rental

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string rentaltype = (string)TempData["rentaltype"];
}

<h2>Create</h2>

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Rental Options
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <li class="dropdown-item" href="">@Html.ActionLink("Rentals", "Create")</li>
        <li class="dropdown-item" href="">@Html.ActionLink("Rental Equipment", "CreateRentalEquipment")</li>
        <li class="dropdown-item" href="">@Html.ActionLink("Rental Room", "CreateRentalRoom")</li>
    </ul>
</div>

@*If user selects other than Rental Room or Rental Equipment from dropdown (NOT these), this wil trigger the display of the below fields. This is also the default view for when a user clicks the 'Create' button on the Index page and is taken to this Create page.*@
@if (rentaltype != "rentalroom" && rentaltype != "rentalequipment")
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="rental-create-edit--formwrapper">

            <h4 class="rental-create-edit--CRUDheading">Create Rental</h4>
            <div class="rental-create-edit--flexcontainer">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group rental-create-edit--flex-formgroup">
                    @Html.LabelFor(model => model.RentalName, "Rental Name", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label " })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Rental Name" } })
                        @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
                        <span asp-validation-for="model.RentalName" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group rental-create-edit--flex-formgroup">
                    @Html.LabelFor(model => model.RentalCost, "Rental Cost", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Rental Cost" } })
                        @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.FlawsAndDamages, "Flaws and Damages", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Flaws and Damages" } })
                        @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="rental-create-edit--inputcontainer">
                        <input type="submit" value="Create" class="btn col-12 mx-auto mt-3 rental-create-edit--btn" />
                    </div>

                    <div class="rental-create-edit--inputcontainer">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark" })
                    </div>
                </div>

            </div>
        </div>



    }
}

@*If user selects Rental Equipment from dropdown, the appropriate action will be called and
    rentalequipment string will be passed into the view, triggering the display of the below additional fields*@
@if (rentaltype == "rentalequipment")
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="rental-create-edit--formwrapper">

            <h4 class="rental-create-edit--CRUDheading">Create Rental Equipment</h4>
            <div class="rental-create-edit--flexcontainer">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group rental-create-edit--flex-formgroup">
                    @Html.LabelFor(model => model.RentalName, "Rental Name", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label " })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Rental Name" } })
                        @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create-edit--flex-formgroup">
                    @Html.LabelFor(model => model.RentalCost, "Rental Cost", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Rental Cost" } })
                        @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.FlawsAndDamages, "Flaws and Damages", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Flaws and Damages" } })
                        @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.ChokingHazard, "Choking Hazard", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.ChokingHazard, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Choking Hazard" } })
                        @Html.ValidationMessageFor(model => model.ChokingHazard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.PurchasePrice, "Purchase Price", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Purchase Price" } })
                        @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.SuffocationHazard, "Suffocation Hazard", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.SuffocationHazard, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Suffocation Hazard" } })
                        @Html.ValidationMessageFor(model => model.SuffocationHazard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="rental-create-edit--inputcontainer">
                        <input type="submit" value="Create" class="btn col-12 mx-auto mt-3 rental-create-edit--btn" />
                    </div>

                    <div class="rental-create-edit--inputcontainer">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark" })
                    </div>
                </div>

            </div>
        </div>



    }
}

@*If user selects Rental Room from dropdown, the appropriate action will be called and
    rentalequipment string will be passed into the view, triggering the display of the below additional fields*@
@if (rentaltype == "rentalroom")
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="rental-create-edit--formwrapper">

            <h4 class="rental-create-edit--CRUDheading">Create Rental Room</h4>
            <div class="rental-create-edit--flexcontainer">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group rental-create-edit--flex-formgroup">
                    @Html.LabelFor(model => model.RentalName, "Rental Name", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label " })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.RentalName, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Rental Name" } })
                        @Html.ValidationMessageFor(model => model.RentalName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group rental-create-edit--flex-formgroup">
                    @Html.LabelFor(model => model.RentalCost, "Rental Cost", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.RentalCost, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Rental Cost" } })
                        @Html.ValidationMessageFor(model => model.RentalCost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.FlawsAndDamages, "Flaws and Damages", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.FlawsAndDamages, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Flaws and Damages" } })
                        @Html.ValidationMessageFor(model => model.FlawsAndDamages, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.RoomNumber, "Room Number", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.RoomNumber, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Room Number" } })
                        @Html.ValidationMessageFor(model => model.RoomNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.MaxOccupancy, "Max Occupancy", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.MaxOccupancy, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Max Occupancy" } })
                        @Html.ValidationMessageFor(model => model.MaxOccupancy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="rental-create-edit--formwrapper">
                    @Html.LabelFor(model => model.SquareFootage, "Square Footage", htmlAttributes: new { @class = "control-label col-md-2 rental-create-edit--label" })
                    <div class="rental-create-edit--inputcontainer">
                        @Html.EditorFor(model => model.SquareFootage, new { htmlAttributes = new { @class = "form-control rental-create-edit--input", @placeholder = "Square Footage" } })
                        @Html.ValidationMessageFor(model => model.SquareFootage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="rental-create-edit--inputcontainer">
                        <input type="submit" value="Create" class="btn col-12 mx-auto mt-3 rental-create-edit--btn" />
                    </div>

                    <div class="rental-create-edit--inputcontainer">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark" })
                    </div>
                </div>

            </div>
        </div>



    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



}
